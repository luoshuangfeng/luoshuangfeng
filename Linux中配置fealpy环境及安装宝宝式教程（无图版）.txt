Linux中fealpy环境配置及安装
全程终端执行
STEP-1:安装miniconda3 看#下面内容，按顺序操作
# 创建 Miniconda 的安装目录
mkdir -p ~/miniconda3

# 下载 Miniconda 安装脚本
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh

# 执行安装脚本
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3

# 删除安装脚本
rm -rf ~/miniconda3/miniconda.sh

# 初始化 conda，配置 Shell
~/miniconda3/bin/conda init bash

STEP-2：创建conda的fealpy环境
conda create -n [环境名字] python=3.12     “[环境名字]”这个修改为你喜欢的环境名字，我的是myenv，不需要中括号

注有些同学可能会在这一步失败，因为找不到conda，这里我推荐进入miniconda3的bin文件夹当中，可以采用在终端中输入
cd ~/miniconda3/bin    进入该文件夹路径
进入后终端输入
./conda create -n [环境名字] python=3.12     注意这里./不能忘记，不然还是找不到

为了激活环境可以采用以下方式
source ~/.bashrc  # 如果使用 Bash,通常是这种就可以了【这个是为了让环境初始化】
# 或
source ~/.zshrc   # 如果使用 Zsh

随后进行激活fealpy环境：
conda activate [环境名字]

STEP-3：安装fealpy
git clone https://github.com/weihuayi/fealpy.git /home/lsf/fealpy    后面的/home/lsf/fealpy是你克隆的文件夹路径

接下来进入你克隆的路径

cd /home/lsf/fealpy 

pip install -e .    一般来说需要1小时

加载完成后，可以下一个vscode进行测试fealpy库是否可以调用

下载vscode ：sudo snap install code

创建一个文件夹，在vscode下载python相关插件后，尝试编写一个mian.py 后，按下Ctrl + Shift + P，会弹出窗口，
在搜索栏输入：
Python: Select Interpreter
找到右端带有conda选取即可，若接下来程序无报错，即配置完成

如果你有些numpy等库没有安装的报错，可以使用pip3 install numpy进行安装，再执行程序
以下是一个示例关于fealpy的程序代码：
import numpy as np
import matplotlib.pyplot as plt
from fealpy.mesh import TriangleMesh

mesh = TriangleMesh.from_polygon_gmsh([[0.0, 0.0], [1.0, 0.0], [0.0, 1.0]], 0.1)  # 不均匀的网格


fig = plt.figure()
axes = fig.gca()
mesh.add_plot(axes)
# mesh.find_node(axes,showindex=True,fontsize=20)  # 显示节点编号
# mesh.find_edge(axes, showindex=True,fontsize=20)  # 显示边编号
# mesh.find_cell(axes, showindex=True,fontsize=20)  # 显示单元编号
# plt.show()

cell = mesh.entity('cell')  # (NC, 3)
node = mesh.entity('node')  # (N, 2)
print(mesh.entity_measure('edge')[0:3])

def compute_aspect_ratio(cell, node):
    """
    计算网格中每个三角形单元的长宽比（Aspect Ratio）
    """
    aspect_ratios = []

    for tri in cell:
        # 获取三角形顶点的坐标
        p0, p1, p2 = node[tri]

        # 计算三边长度
        edges = np.array([
            np.linalg.norm(p1 - p0),
            np.linalg.norm(p2 - p1),
            np.linalg.norm(p0 - p2)
        ])

        # 最长边
        L_max = np.max(edges)

        # 使用海伦公式计算面积
        s = np.sum(edges) / 2  # 半周长
        area = np.sqrt(s * (s - edges[0]) * (s - edges[1]) * (s - edges[2]))

        # 计算高度 h = (2 * 面积) / 最长边
        h = 2 * area / L_max

        # 计算长宽比
        aspect_ratio = L_max / h
        aspect_ratios.append(aspect_ratio)

    return np.array(aspect_ratios)


# 计算所有单元的长宽比
aspect_ratios = compute_aspect_ratio(cell, node)

# 绘制长宽比的直方图
plt.figure(figsize=(8, 5))
plt.hist(aspect_ratios, bins=10, edgecolor='black', alpha=0.7)
plt.xlabel("Aspect Ratio")
plt.ylabel("Frequency")
plt.title("Histogram of Triangle Aspect Ratios")
plt.grid(axis='y', linestyle='--', alpha=0.6)
plt.show()
print(aspect_ratios)